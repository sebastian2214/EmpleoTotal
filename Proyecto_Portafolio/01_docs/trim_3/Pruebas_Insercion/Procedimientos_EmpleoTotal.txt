1. Procedimientos para calificaciones
Insertar en calificaciones

DELIMITER $$

CREATE PROCEDURE insertar_calificacion(
    IN p_calificacion INT, 
    IN p_comentario VARCHAR(400), 
    IN p_fecha DATE, 
    IN p_oferta_empleo_id INT, 
    IN p_usuario_id INT
)
BEGIN
    INSERT INTO calificaciones (calificacion, comentario, fecha, oferta_empleo_id_oferta_empleo, usuario_id_usuario)
    VALUES (p_calificacion, p_comentario, p_fecha, p_oferta_empleo_id, p_usuario_id);
END $$

DELIMITER ;
-------------------------------------------------------------------------------------------------------------
Actualizar calificaciones

DELIMITER $$

CREATE PROCEDURE actualizar_calificacion(
    IN p_idcalificaciones INT, 
    IN p_calificacion INT, 
    IN p_comentario VARCHAR(400), 
    IN p_fecha DATE, 
    IN p_oferta_empleo_id INT, 
    IN p_usuario_id INT
)
BEGIN
    UPDATE calificaciones
    SET calificacion = p_calificacion, comentario = p_comentario, fecha = p_fecha, 
        oferta_empleo_id_oferta_empleo = p_oferta_empleo_id, usuario_id_usuario = p_usuario_id
    WHERE idcalificaciones = p_idcalificaciones;
END $$

DELIMITER ;
-----------------------------------------------------------------------------------------------
Eliminar calificaciones

DELIMITER $$

CREATE PROCEDURE eliminar_calificacion(IN p_idcalificaciones INT)
BEGIN
    DELETE FROM calificaciones WHERE idcalificaciones = p_idcalificaciones;
END $$

DELIMITER ;
---------------------------------------------------------------------------------------------
Obtener todas las calificaciones

DELIMITER $$

CREATE PROCEDURE obtener_calificaciones()
BEGIN
    SELECT * FROM calificaciones;
END $$

DELIMITER ;

------------------------------------------------------------------------------
2. Procedimientos para categoria

Insertar en categoria

DELIMITER $$

CREATE PROCEDURE insertar_categoria(IN p_nombre_cat VARCHAR(45))
BEGIN
    INSERT INTO categoria (nombre_cat) VALUES (p_nombre_cat);
END $$

DELIMITER ;
---------------------------------------------------------------------------------------------
Actualizar categoria

DELIMITER $$

CREATE PROCEDURE actualizar_categoria(IN p_id_categoria INT, IN p_nombre_cat VARCHAR(45))
BEGIN
    UPDATE categoria
    SET nombre_cat = p_nombre_cat
    WHERE id_categora = p_id_categoria;
END $$

DELIMITER ;
-----------------------------------------------------------------------------------------------------
Eliminar categoria

DELIMITER $$

CREATE PROCEDURE eliminar_categoria(IN p_id_categoria INT)
BEGIN
    DELETE FROM categoria WHERE id_categora = p_id_categoria;
END $$

DELIMITER ;

---------------------------------------------------------------------------------------------
Obtener todas las categorias
DELIMITER $$

CREATE PROCEDURE obtener_categorias()
BEGIN
    SELECT * FROM categoria;
END $$
DELIMITER ;
------------------------------------------------------------------------------------------------------------------
3. Procedimientos para empresas
Insertar en empresas

DELIMITER $$

CREATE PROCEDURE insertar_empresa(
    IN p_nombre_emp VARCHAR(45),
    IN p_industria VARCHAR(500),
    IN p_ubicacion VARCHAR(45),
    IN p_tamano_emp VARCHAR(45),
    IN p_descripcion_emp VARCHAR(45),
    IN p_contacto VARCHAR(100),
    IN p_correo VARCHAR(45),
    IN p_sitio_web_of VARCHAR(45),
    IN p_antecedentes VARCHAR(500),
    IN p_mision VARCHAR(100),
    IN p_vision VARCHAR(100),
    IN p_regionales VARCHAR(500),
    IN p_hitos_significativos VARCHAR(100),
    IN p_innovaciones_recientes VARCHAR(100),
    IN p_beneficios_empleados VARCHAR(500),
    IN p_usuario_id_usuario INT
)
BEGIN
    INSERT INTO empresas (nombre_emp, industria, ubicacion, tamano_emp, descripcion_emp, contacto, correo, sitio_web_of, antecedentes, mision, vision, regionales, hitos_significativos, innovaciones_recientes, beneficios_empleados, usuario_id_usuario)
    VALUES (p_nombre_emp, p_industria, p_ubicacion, p_tamano_emp, p_descripcion_emp, p_contacto, p_correo, p_sitio_web_of, p_antecedentes, p_mision, p_vision, p_regionales, p_hitos_significativos, p_innovaciones_recientes, p_beneficios_empleados, p_usuario_id_usuario);
END $$

DELIMITER ;
------------------------------------------------------------------------------------------------------------------
Actualizar empresas

DELIMITER $$

CREATE PROCEDURE actualizar_empresa(
    IN p_id_empresa INT,
    IN p_nombre_emp VARCHAR(45),
    IN p_industria VARCHAR(500),
    IN p_ubicacion VARCHAR(45),
    IN p_tamano_emp VARCHAR(45),
    IN p_descripcion_emp VARCHAR(45),
    IN p_contacto VARCHAR(100),
    IN p_correo VARCHAR(45),
    IN p_sitio_web_of VARCHAR(45),
    IN p_antecedentes VARCHAR(500),
    IN p_mision VARCHAR(100),
    IN p_vision VARCHAR(100),
    IN p_regionales VARCHAR(500),
    IN p_hitos_significativos VARCHAR(100),
    IN p_innovaciones_recientes VARCHAR(100),
    IN p_beneficios_empleados VARCHAR(500),
    IN p_usuario_id_usuario INT
)
BEGIN
    UPDATE empresas
    SET nombre_emp = p_nombre_emp, industria = p_industria, ubicacion = p_ubicacion, 
        tamano_emp = p_tamano_emp, descripcion_emp = p_descripcion_emp, contacto = p_contacto, 
        correo = p_correo, sitio_web_of = p_sitio_web_of, antecedentes = p_antecedentes, 
        mision = p_mision, vision = p_vision, regionales = p_regionales, 
        hitos_significativos = p_hitos_significativos, innovaciones_recientes = p_innovaciones_recientes, 
        beneficios_empleados = p_beneficios_empleados, usuario_id_usuario = p_usuario_id_usuario
    WHERE id_empresa = p_id_empresa;
END $$

DELIMITER ;
----------------------------------------------------------------------------------------------------------------
Eliminar empresa

DELIMITER $$

CREATE PROCEDURE eliminar_empresa(IN p_id_empresa INT)
BEGIN
    DELETE FROM empresas WHERE id_empresa = p_id_empresa;
END $$

DELIMITER ;
---------------------------------------------------------------------------------------------------------------
Obtener todas las empresas

DELIMITER $$


CREATE PROCEDURE obtener_empresas()
BEGIN
    SELECT * FROM empresas;
END $$

DELIMITER ;
---------------------------------------------------------------------------------------------------------------------
4. Procedimientos para estudios
Insertar en estudios

DELIMITER $$

CREATE PROCEDURE insertar_estudio(
    IN p_institucion VARCHAR(45),
    IN p_titulo VARCHAR(45),
    IN p_fecha_inicio DATE,
    IN p_fecha_fin DATE,
    IN p_hojade_de_vida_id INT
)
BEGIN
    INSERT INTO estudios (intitucion, titulo, fecha_inicio, fecha_fin, hojade_de_vida_id_hojade_de_vida)
    VALUES (p_institucion, p_titulo, p_fecha_inicio, p_fecha_fin, p_hojade_de_vida_id);
END $$

DELIMITER ;
--------------------------------------------------------------------------------------------------------------------------
Actualizar estudios

DELIMITER $$

CREATE PROCEDURE actualizar_estudio(
    IN p_id_estudios INT,
    IN p_institucion VARCHAR(45),
    IN p_titulo VARCHAR(45),
    IN p_fecha_inicio DATE,
    IN p_fecha_fin DATE,
    IN p_hojade_de_vida_id INT
)
BEGIN
    UPDATE estudios
    SET intitucion = p_institucion, titulo = p_titulo, fecha_inicio = p_fecha_inicio, fecha_fin = p_fecha_fin, 
        hojade_de_vida_id_hojade_de_vida = p_hojade_de_vida_id
    WHERE idEstudios = p_id_estudios;
END $$

DELIMITER ;
---------------------------------------------------------------------------------------------------------------------------
Eliminar estudios

DELIMITER $$

CREATE PROCEDURE eliminar_estudio(IN p_id_estudios INT)
BEGIN
    DELETE FROM estudios WHERE idEstudios = p_id_estudios;
END $$

DELIMITER ;
---------------------------------------------------------------------------------------------------------------------
Obtener todos los estudios

DELIMITER $$

CREATE PROCEDURE obtener_estudios()
BEGIN
    SELECT * FROM estudios;
END$$

DELIMITER ;
------------------------------------------------------------------------------------------------------------------------------}
5. Procedimientos para experiencia_laboral
Insertar en experiencia_laboral

DELIMITER $$

CREATE PROCEDURE insertar_experiencia(
    IN p_empresa VARCHAR(50),
    IN p_cargo VARCHAR(45),
    IN p_ubicacion_empleo VARCHAR(45),
    IN p_descripcion_labor VARCHAR(45),
    IN p_fecha_inicio DATE,
    IN p_fecha_fin DATE,
    IN p_hojade_de_vida_id INT
)
BEGIN
    INSERT INTO experiencia_laboral (empresa, cargo, ubicacion_empleo, descripcion_labor, fecha_inicio, fecha_fin, hojade_de_vida_id_hojade_de_vida)
    VALUES (p_empresa, p_cargo, p_ubicacion_empleo, p_descripcion_labor, p_fecha_inicio, p_fecha_fin, p_hojade_de_vida_id);
END $$

DELIMITER ;
----------------------------------------------------------------------------------------------------------------------------------
Actualizar experiencia_laboral

DELIMITER $$

CREATE PROCEDURE actualizar_experiencia(
    IN p_id_experiencia INT,
    IN p_empresa VARCHAR(50),
    IN p_cargo VARCHAR(45),
    IN p_ubicacion_empleo VARCHAR(45),
    IN p_descripcion_labor VARCHAR(45),
    IN p_fecha_inicio DATE,
    IN p_fecha_fin DATE,
    IN p_hojade_de_vida_id INT
)
BEGIN
    UPDATE experiencia_laboral
    SET empresa = p_empresa, cargo = p_cargo, ubicacion_empleo = p_ubicacion_empleo, 
        descripcion_labor = p_descripcion_labor, fecha_inicio = p_fecha_inicio, fecha_fin = p_fecha_fin, 
        hojade_de_vida_id_hojade_de_vida = p_hojade_de_vida_id
    WHERE idexperiencia_laboral = p_id_experiencia;
END $$

DELIMITER ;
---------------------------------------------------------------------------------------------------------------------------------------
Eliminar experiencia_laboral

DELIMITER $$

CREATE PROCEDURE eliminar_experiencia(IN p_id_experiencia INT)
BEGIN
    DELETE FROM experiencia_laboral WHERE idexperiencia_laboral = p_id_experiencia;
END $$

DELIMITER ;
-------------------------------------------------------------------------------------------------------------------------------------------
Obtener toda la experiencia_laboral

DELIMITER $$

CREATE PROCEDURE obtener_experiencias()
BEGIN
    SELECT * FROM experiencia_laboral;
END $$

DELIMITER ;
-------------------------------------------------------------------------------------------------------------------------------------------------
6. Procedimientos para hojade_de_vida
Insertar en hojade_de_vida

DELIMITER $$

CREATE PROCEDURE insertar_hojade_de_vida(
    IN p_nombre VARCHAR(50),
    IN p_apellido VARCHAR(50),
    IN p_direccion VARCHAR(45),
    IN p_telefono DECIMAL(10,0),
    IN p_correo VARCHAR(1000),
    IN p_estado_civil VARCHAR(45),
    IN p_fecha_nacimiento DATE,
    IN p_nacionalidad VARCHAR(45),
    IN p_descripcion_sobre_ti VARCHAR(500),
    IN p_objetivo_profecional VARCHAR(500),
    IN p_idiomas VARCHAR(45),
    IN p_referencias VARCHAR(45),
    IN p_parentezco VARCHAR(45),
    IN p_numero_referencia VARCHAR(45),
    IN p_intereses_personales VARCHAR(500),
    IN p_disponibilidad_trabajo VARCHAR(45),
    IN p_usuario_id_usuario INT
)
BEGIN
    INSERT INTO hojade_de_vida (nombre, apellido, direccion, telefono, correo, estado_civil, fecha_nacimiento, nacionalidad, descripcion_sobre_ti, objetivo_profecional, idiomas, referencias, parentezco, numero_referencia, intereses_personales, disponibilidad_trabajo, usuario_id_usuario)
    VALUES (p_nombre, p_apellido, p_direccion, p_telefono, p_correo, p_estado_civil, p_fecha_nacimiento, p_nacionalidad, p_descripcion_sobre_ti, p_objetivo_profecional, p_idiomas, p_referencias, p_parentezco, p_numero_referencia, p_intereses_personales, p_disponibilidad_trabajo, p_usuario_id_usuario);
END $$

DELIMITER ;
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Actualizar hojade_de_vida

DELIMITER $$

CREATE PROCEDURE actualizar_hojade_de_vida(
    IN p_id_hojade_de_vida INT,
    IN p_nombre VARCHAR(50),
    IN p_apellido VARCHAR(50),
    IN p_direccion VARCHAR(45),
    IN p_telefono DECIMAL(10,0),
    IN p_correo VARCHAR(1000),
    IN p_estado_civil VARCHAR(45),
    IN p_fecha_nacimiento DATE,
    IN p_nacionalidad VARCHAR(45),
    IN p_descripcion_sobre_ti VARCHAR(500),
    IN p_objetivo_profecional VARCHAR(500),
    IN p_idiomas VARCHAR(45),
    IN p_referencias VARCHAR(45),
    IN p_parentezco VARCHAR(45),
    IN p_numero_referencia VARCHAR(45),
    IN p_intereses_personales VARCHAR(500),
    IN p_disponibilidad_trabajo VARCHAR(45),
    IN p_usuario_id_usuario INT
)
BEGIN
    UPDATE hojade_de_vida
    SET nombre = p_nombre, apellido = p_apellido, direccion = p_direccion, telefono = p_telefono, 
        correo = p_correo, estado_civil = p_estado_civil, fecha_nacimiento = p_fecha_nacimiento, 
        nacionalidad = p_nacionalidad, descripcion_sobre_ti = p_descripcion_sobre_ti, 
        objetivo_profecional = p_objetivo_profecional, idiomas = p_idiomas, referencias = p_referencias, 
        parentezco = p_parentezco, numero_referencia = p_numero_referencia, 
        intereses_personales = p_intereses_personales, disponibilidad_trabajo = p_disponibilidad_trabajo, 
        usuario_id_usuario = p_usuario_id_usuario
    WHERE id_hojade_de_vida = p_id_hojade_de_vida;
END $$

DELIMITER ;
-------------------------------------------------------------------------------------------------------------------------------------------------
Eliminar hojade_de_vida

DELIMITER $$

CREATE PROCEDURE eliminar_hojade_de_vida(IN p_id_hojade_de_vida INT)
BEGIN
    DELETE FROM hojade_de_vida WHERE id_hojade_de_vida = p_id_hojade_de_vida;
END $$

DELIMITER ;
---------------------------------------------------------------------------------------------------------------------------------------------------------
Obtener todas las hojade_de_vida

DELIMITER $$

CREATE PROCEDURE obtener_hojas_de_vida()
BEGIN
    SELECT * FROM hojade_de_vida;
END $$

DELIMITER ;
--------------------------------------------------------------------------------------------------------------------------------------------------------
7. Tabla mensajes
Insertar en mensajes
DELIMITER $$

CREATE PROCEDURE insertar_mensaje(
    IN p_id_receptor INT,
    IN p_id_interceptor INT,
    IN p_contenido VARCHAR(500),
    IN p_fecha_envio DATETIME,
    IN p_visto TINYINT(1)
)
BEGIN
    INSERT INTO mensajes (id_receptor, id_interceptor, contenido, fecha_envio, visto)
    VALUES (p_id_receptor, p_id_interceptor, p_contenido, p_fecha_envio, p_visto);
END $$

DELIMITER ;
-------------------------------------------------------------------------------------------------------------------------------------------------------------------
Actualizar mensajes

DELIMITER $$

CREATE PROCEDURE actualizar_mensaje(
    IN p_id_mensajes INT,
    IN p_id_receptor INT,
    IN p_id_interceptor INT,
    IN p_contenido VARCHAR(500),
    IN p_fecha_envio DATETIME,
    IN p_visto TINYINT(1)
)
BEGIN
    UPDATE mensajes
    SET id_receptor = p_id_receptor, id_interceptor = p_id_interceptor, 
        contenido = p_contenido, fecha_envio = p_fecha_envio, visto = p_visto
    WHERE id_mensajes = p_id_mensajes;
END $$

DELIMITER ;
---------------------------------------------------------------------------------------------------------------------------------------------------------------------
Eliminar de mensajes

DELIMITER $$

CREATE PROCEDURE eliminar_mensaje(IN p_id_mensajes INT)
BEGIN
    DELETE FROM mensajes WHERE id_mensajes = p_id_mensajes;
END $$

DELIMITER ;
----------------------------------------------------------------------------------------------------------------------------------------------------
Obtener todas los mensajes

DELIMITER $$

CREATE PROCEDURE obtener_mensajes()
BEGIN
    SELECT * FROM mensajes;
END $$

DELIMITER ;
-----------------------------------------------------------------------------------------------------------------------------------------------------
8. Tabla notificaciones
Insertar en notificaciones

DELIMITER $$

CREATE PROCEDURE insertar_notificacion(
    IN p_contenido VARCHAR(200),
    IN p_fecha_envio DATE,
    IN p_usuario_id INT
)
BEGIN
    INSERT INTO notificaciones (contenido, fecha_envio, usuario_id_usuario)
    VALUES (p_contenido, p_fecha_envio, p_usuario_id);
END $$

DELIMITER ;
------------------------------------------------------------------------------------------------------------------------------------------------------------
Actualizar notificaciones

DELIMITER $$

CREATE PROCEDURE actualizar_notificacion(
    IN p_id_notificaciones INT,
    IN p_contenido VARCHAR(200),
    IN p_fecha_envio DATE,
    IN p_usuario_id INT
)
BEGIN
    UPDATE notificaciones
    SET contenido = p_contenido, fecha_envio = p_fecha_envio, usuario_id_usuario = p_usuario_id
    WHERE idnotificaciones = p_id_notificaciones;
END $$

DELIMITER ;

---------------------------------------------------------------------------------------------------------------------------------------------------
Eliminar de notificaciones

DELIMITER $$

CREATE PROCEDURE eliminar_notificacion(IN p_id_notificaciones INT)
BEGIN
    DELETE FROM notificaciones WHERE idnotificaciones = p_id_notificaciones;
END $$

DELIMITER ;
-------------------------------------------------------------------------------------------------------------------------------------------------------------
Obtener todas las notificaciones

DELIMITER $$

CREATE PROCEDURE obtener_notificaciones()
BEGIN
    SELECT * FROM notificaciones;
END $$

DELIMITER ;
---------------------------------------------------------------------------------------------------------------------------------------------------------------
9. Tabla oferta_empleo
Insertar en oferta_empleo

DELIMITER $$

CREATE PROCEDURE insertar_oferta_empleo(
    IN p_titulo_emp VARCHAR(45),
    IN p_descripcion VARCHAR(500),
    IN p_requisitos VARCHAR(500),
    IN p_ubicacion VARCHAR(45),
    IN p_salario DOUBLE,
    IN p_oferta_empleocol VARCHAR(250),
    IN p_telefono INT,
    IN p_correo VARCHAR(250),
    IN p_sub_cat_id_sub_cat INT
)
BEGIN
    INSERT INTO oferta_empleo (titulo_emp, descripcion, requisitos, ubicacion, salario, oferta_empleocol, telefono, correo, sub_cat_id_sub_cat)
    VALUES (p_titulo_emp, p_descripcion, p_requisitos, p_ubicacion, p_salario, p_oferta_empleocol, p_telefono, p_correo, p_sub_cat_id_sub_cat);
END $$

DELIMITER ;
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
Actualizar oferta_empleo

DELIMITER $$

CREATE PROCEDURE actualizar_oferta_empleo(
    IN p_id_oferta_empleo INT,
    IN p_titulo_emp VARCHAR(45),
    IN p_descripcion VARCHAR(500),
    IN p_requisitos VARCHAR(500),
    IN p_ubicacion VARCHAR(45),
    IN p_salario DOUBLE,
    IN p_oferta_empleocol VARCHAR(250),
    IN p_telefono INT,
    IN p_correo VARCHAR(250),
    IN p_sub_cat_id_sub_cat INT
)
BEGIN
    UPDATE oferta_empleo
    SET titulo_emp = p_titulo_emp, descripcion = p_descripcion, requisitos = p_requisitos, 
        ubicacion = p_ubicacion, salario = p_salario, oferta_empleocol = p_oferta_empleocol, 
        telefono = p_telefono, correo = p_correo, sub_cat_id_sub_cat = p_sub_cat_id_sub_cat
    WHERE id_oferta_empleo = p_id_oferta_empleo;
END $$

DELIMITER ;
--------------------------------------------------------------------------------------------------------------------------------------------------------------------
Eliminar de oferta_empleo

DELIMITER $$

CREATE PROCEDURE eliminar_oferta_empleo(IN p_id_oferta_empleo INT)
BEGIN
    DELETE FROM oferta_empleo WHERE id_oferta_empleo = p_id_oferta_empleo;
END $$

DELIMITER ;
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Obtener todas las ofertas de empleo

DELIMITER $$

CREATE PROCEDURE obtener_oferta_empleo()
BEGIN
    SELECT * FROM oferta_empleo;
END $$

DELIMITER ;
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
10. Tabla rol
Insertar en rol

DELIMITER $$

CREATE PROCEDURE insertar_rol(
    IN p_nombre_rol VARCHAR(50)
)
BEGIN
    INSERT INTO rol (nombre_rol)
    VALUES (p_nombre_rol);
END $$

DELIMITER ;
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Actualizar rol

DELIMITER $$

CREATE PROCEDURE actualizar_rol(
    IN p_id_rol INT,
    IN p_nombre_rol VARCHAR(50)
)
BEGIN
    UPDATE rol
    SET nombre_rol = p_nombre_rol
    WHERE id_rol = p_id_rol;
END $$

DELIMITER ;
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Eliminar de rol

DELIMITER $$

CREATE PROCEDURE eliminar_rol(IN p_id_rol INT)
BEGIN
    DELETE FROM rol WHERE id_rol = p_id_rol;
END $$

DELIMITER ;
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Obtener todos los roles
DELIMITER $$

CREATE PROCEDURE obtener_rol()
BEGIN
    SELECT * FROM rol;
END $$

DELIMITER ;
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
11. Tabla sub_cat
Insertar en sub_cat

DELIMITER $$

CREATE PROCEDURE insertar_sub_cat(
    IN p_nombre_sub_cat VARCHAR(45),
    IN p_categoria_id_categora INT
)
BEGIN
    INSERT INTO sub_cat (nombre_sub_cat, categoria_id_categora)
    VALUES (p_nombre_sub_cat, p_categoria_id_categora);
END $$

DELIMITER ;
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Actualizar sub_cat

DELIMITER $$

CREATE PROCEDURE actualizar_sub_cat(
    IN p_id_sub_cat INT,
    IN p_nombre_sub_cat VARCHAR(45),
    IN p_categoria_id_categora INT
)
BEGIN
    UPDATE sub_cat
    SET nombre_sub_cat = p_nombre_sub_cat, categoria_id_categora = p_categoria_id_categora
    WHERE id_sub_cat = p_id_sub_cat;
END $$

DELIMITER ;
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Eliminar de sub_cat

DELIMITER $$

CREATE PROCEDURE eliminar_sub_cat(IN p_id_sub_cat INT)
BEGIN
    DELETE FROM sub_cat WHERE id_sub_cat = p_id_sub_cat;
END $$

DELIMITER ;
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Obtener todas las subcat
DELIMITER $$

CREATE PROCEDURE obtener_sub_cat()
BEGIN
    SELECT * FROM sub_cat;
END $$

DELIMITER ;
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
12. Tabla usuario
Insertar en usuario

DELIMITER $$

CREATE PROCEDURE insertar_usuario(
    IN p_usuario VARCHAR(45),
    IN p_correo VARCHAR(45),
    IN p_contrasena VARCHAR(250),
    IN p_rol_id_rol INT
)
BEGIN
    INSERT INTO usuario (usuario, correo, contrasena, rol_id_rol)
    VALUES (p_usuario, p_correo, p_contrasena, p_rol_id_rol);
END $$

DELIMITER ;
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Actualizar usuario

DELIMITER $$

CREATE PROCEDURE actualizar_usuario(
    IN p_id_usuario INT,
    IN p_usuario VARCHAR(45),
    IN p_correo VARCHAR(45),
    IN p_contrasena VARCHAR(250),
    IN p_rol_id_rol INT
)
BEGIN
    UPDATE usuario
    SET usuario = p_usuario, correo = p_correo, contrasena = p_contrasena, rol_id_rol = p_rol_id_rol
    WHERE id_usuario = p_id_usuario;
END $$

DELIMITER ;
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Eliminar de usuario

DELIMITER $$

CREATE PROCEDURE eliminar_usuario(IN p_id_usuario INT)
BEGIN
    DELETE FROM usuario WHERE id_usuario = p_id_usuario;
END $$

DELIMITER ;
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Obtener todos los usuarios
DELIMITER $$

CREATE PROCEDURE obtener_usuario()
BEGIN
    SELECT * FROM usuario;
END $$

DELIMITER ;
















